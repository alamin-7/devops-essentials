# check all branch

git branch -all/-a

# check all remote branch 

git branch -r

# git rebase

 Rebasing is the process of moving or combining a sequence of commits to a new base commit

# git pull --rebase origin master

This command will make commit on top of the remote commit. In simple words, my local commits will be

placed first then the remote commits.  'A' 'B' 'C' [local] 'X' 'Y' 'Z' [remote]

#  git reflog

Git keeps a reflog, which is a log of all changes to the branches in your repository. 
You can use the reflog to find lost commits or changes

# git merge

git merge is use for combining commits of two or more branches into a singe branch [first forward merge]. 

When the base branch has changed since the branch was first created, three way of merging takes place.
Git in this situation generates a fresh merging commit that incorporates the modifications from both branches

When we perform merging, git always merges with the current branch from where we are performing the operation.

By this, the branch being merged is not affected.

# Steps To Merge a Branch

Step 1: Creating a new branch

Step 2: Make sure always latest changes are pulled.

Step 3: Resolving the marge conflicts.

Step 4: Merged code needs to be tested.

Step 5: Commit the merged code.

Step 6: Push the merged branch.


# git auto complete

in .bashrc file

source /etc/bash_completion.d/git
# or
source /usr/share/bash-completion/completions/git

# repo updated in gitlab

i. clone from gitlab

ii. remote add

iii. fetch

iv. pull   / git pull github master [git merge]

v. push    / git push origin master

# another option 

i. clone from github

ii. create a gitlab project.

iii. remote add gitlab

iv. push to gitlab


